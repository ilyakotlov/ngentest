// tslint:disable
import {
  async,
  fakeAsync,
  ComponentFixture,
  TestBed,
  tick,
  discardPeriodicTasks
} from '@angular/core/testing';
import { Injectable, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';
import { configureTests, ConfigureFn } from '@frontend/test-helper';
import { RouterTestingModule } from '@angular/router/testing';
import { HttpClientTestingModule } from '@angular/common/http/testing';
import { ActivatedRoute } from '@angular/router';
import {
  mock,
  instance,
  when,
  anyString,
  deepEqual,
  resetCalls
} from 'ts-mockito';
import { MockActivatedRoute } from '@frontend/test-helper/activated-route-mock';
import {
  MockNgRedux,
  NgReduxTestingModule
} from '@angular-redux/store/testing';
import { of } from 'rxjs';

<% for(var key in imports) { -%>
import {<%- imports[key].map(el => `${el}`).join(', ') -%>} from '<%- key -%>';
<% } -%>

describe('<%= className %>', () => {
  let fixture;
  let component;
  <% for(var key in mocks) { -%>
    <%- mocks[key] -%>
  <% } -%>

  beforeEach(() => {
    TestBed.configureTestingModule({
      declarations: [
        <%= className %>
      ],
      providers: [<% for(var key in providers) { %>
        <%- providers[key]+ ',' %><% } %>
      ],
      schemas: [ CUSTOM_ELEMENTS_SCHEMA ]
    }).compileComponents();
    fixture = TestBed.createComponent(<%= className %>);
    component = fixture.debugElement.componentInstance;
  });

  it('should create a component', async () => {
    expect(component).toBeTruthy();
  });
  
  <% for(var key in functionTests) { -%>
  <%- functionTests[key] -%>
  <% } -%>
  
});
